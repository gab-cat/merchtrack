name: 3. STAGING - Build

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Export Secrets to Doppler"]
    types:
      - completed
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build:
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    runs-on: "ubuntu-latest"
    environment: Staging

    steps:
      - name: Check if actor is repository owner
        run: |
          if [ "${{ github.actor }}" != "${{ github.repository_owner }}" ]; then
            echo "This workflow can only be run by the repository owner."
            exit 1
          fi

      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Check Database Public Accessibility
        id: check-db
        run: |
          DB_INFO=$(aws lightsail get-relational-database --relational-database-name merchtrack-db-sgp1)
          IS_PUBLIC=$(echo "$DB_INFO" | jq -r '.relationalDatabase.publiclyAccessible')
          echo "is_public=$IS_PUBLIC" >> $GITHUB_OUTPUT

      - name: Open Database to Public Network
        if: ${{ steps.check-db.outputs.is_public == 'false' }}
        run: |
          aws lightsail update-relational-database \
            --relational-database-name merchtrack-db-sgp1 \
            --publicly-accessible

      - name: Wait for Database Availability
        run: |
          MAX_ATTEMPTS=30
          ATTEMPT=1

          while [ $ATTEMPT -le $MAX_ATTEMPTS ]; do
            DB_STATUS=$(aws lightsail get-relational-database --relational-database-name merchtrack-db-sgp1 | jq -r '.relationalDatabase.state')
            
            if [ "$DB_STATUS" = "available" ]; then
              echo "Database is available!"
              break
            fi
            
            echo "Attempt $ATTEMPT: Database status is $DB_STATUS. Waiting 10 seconds..."
            sleep 10
            ATTEMPT=$((ATTEMPT + 1))
          done

          if [ $ATTEMPT -gt $MAX_ATTEMPTS ]; then
            echo "Database did not become available within the timeout period"
            exit 1
          fi

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Setup Doppler Configuration
        run: |
          doppler setup --no-prompt --token ${{ secrets.DOPPLER_TOKEN }} --project ${{ secrets.DOPPLER_TARGET_PROJECT }} --config ${{ secrets.DOPPLER_TARGET_CONFIG }}
          echo "Doppler configuration complete for project ${{ secrets.DOPPLER_TARGET_PROJECT }} with config ${{ secrets.DOPPLER_TARGET_CONFIG }}"
          doppler secrets download --no-file --format env > .env
          echo "Secrets downloaded to .env file."

      - name: Log in to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: https://index.docker.io/v1/
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build client image and push to Docker Hub
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 # v6.10.0
        with:
          context: .
          file: ./Dockerfile
          tags: |
            gabcat/merchtrack:staging
          cache-from: |
            type=registry,ref=gabcat/merchtrack:cache
            type=registry,ref=gabcat/merchtrack:staging
          cache-to: type=inline
          push: true

      - name: Remove env file
        if: always()
        run: |
          if [ -f .env ]; then
            rm .env || echo "Warning: Failed to remove .env file"
          fi

      - name: Close Database to Public Network
        run: |
          aws lightsail update-relational-database \
            --relational-database-name merchtrack-db-sgp1 \
            --no-publicly-accessible
