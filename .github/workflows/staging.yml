name: 3. STAGING - Build

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    if: github.ref == 'refs/heads/main'
    runs-on: 'ubuntu-latest'
    environment: Staging

    steps:
    - name: Check if actor is repository owner
      run: |
        if [ "${{ github.actor }}" != "${{ github.repository_owner }}" ]; then
          echo "This workflow can only be run by the repository owner."
          exit 1
        fi

    - uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0

    - name: Create env file
      env:
        APP_ENV: ${{ secrets.APP_ENV }}
        NODE_ENV: ${{ secrets.NODE_ENV }}
        NEXT_PUBLIC_NODE_ENV: ${{ secrets.NEXT_PUBLIC_NODE_ENV }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
        NEXT_PUBLIC_DATADOG_APPLICATION_ID: ${{ secrets.NEXT_PUBLIC_DATADOG_APPLICATION_ID }}
        NEXT_PUBLIC_DATADOG_CLIENT_TOKEN: ${{ secrets.NEXT_PUBLIC_DATADOG_CLIENT_TOKEN }}
        NEXT_PUBLIC_DATADOG_SITE: ${{ secrets.NEXT_PUBLIC_DATADOG_SITE }}
        NEXT_PUBLIC_DATADOG_SERVICE_NAME: ${{ secrets.NEXT_PUBLIC_DATADOG_SERVICE_NAME }}
        NEXT_PUBLIC_CF_BEACON_TOKEN: ${{ secrets.NEXT_PUBLIC_CF_BEACON_TOKEN }}
        NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_TRACES_SAMPLE_RATE: ${{ secrets.SENTRY_TRACES_SAMPLE_RATE }}
      run: |
          cat << EOF > .env
          NEXT_RUNTIME=${NEXT_RUNTIME}
          APP_ENV=${APP_ENV}
          NODE_ENV=${NODE_ENV}
          NEXT_PUBLIC_NODE_ENV=${NEXT_PUBLIC_NODE_ENV}
          DATABASE_URL=${DATABASE_URL}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
          NEXT_PUBLIC_DATADOG_APPLICATION_ID=${NEXT_PUBLIC_DATADOG_APPLICATION_ID}
          NEXT_PUBLIC_DATADOG_CLIENT_TOKEN=${NEXT_PUBLIC_DATADOG_CLIENT_TOKEN}
          NEXT_PUBLIC_DATADOG_SITE=${NEXT_PUBLIC_DATADOG_SITE}
          NEXT_PUBLIC_DATADOG_SERVICE_NAME=${NEXT_PUBLIC_DATADOG_SERVICE_NAME}
          NEXT_PUBLIC_CF_BEACON_TOKEN=${NEXT_PUBLIC_CF_BEACON_TOKEN}
          NEXT_PUBLIC_SENTRY_DSN=${NEXT_PUBLIC_SENTRY_DSN}
          SENTRY_DSN=${SENTRY_DSN}
          SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}
          SENTRY_TRACES_SAMPLE_RATE=${SENTRY_TRACES_SAMPLE_RATE}
          REDIS_HOST=${REDIS_HOST}
          REDIS_PORT=${REDIS_PORT}
          REDIS_PASSWORD=${REDIS_PASSWORD}
          MAILGUN_API_KEY=${MAILGUN_API_KEY}
          MAILGUN_DOMAIN=${MAILGUN_DOMAIN}
          EOF

    - name: Log in to Docker Hub
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
      with:
        registry: https://index.docker.io/v1/
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build client image and push to Docker Hub
      uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 # v6.10.0
      with:
        context: .
        file: ./Dockerfile
        tags: |
          gabcat/merchtrack:staging
        cache-from: |
          type=registry,ref=gabcat/merchtrack:cache
          type=registry,ref=gabcat/merchtrack:staging
        cache-to: type=inline
        push: true

    - name: Remove env file
      if: always()
      run: |
        if [ -f .env ]; then
          rm .env || echo "Warning: Failed to remove .env file"
        fi
